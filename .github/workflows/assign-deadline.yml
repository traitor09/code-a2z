name: Deadline Checker

on:
  schedule:
    - cron: '0 */6 * * *'  # every 6 hours

permissions:
  issues: write

jobs:
  check-deadlines:
    runs-on: ubuntu-latest
    steps:
      - name: Unassign expired assignments
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['Status: Assigned']
            });

            const now = new Date();

            for (const issue of issues) {
              const body = issue.body || "";
              const priorityMatch = body.match(/### Priority\n+Up to (\d+) days/i);
              if (!priorityMatch) continue;
              const deadlineDays = parseInt(priorityMatch[1]);
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number
              });
              const assignedComment = comments.data.find(c => c.body?.includes("<!-- assigned:"));
              if (!assignedComment) continue;
              const assignedTime = new Date(assignedComment.body.match(/<!-- assigned: (.*?) -->/)[1]);
              const deadline = new Date(assignedTime);
              deadline.setDate(deadline.getDate() + deadlineDays);
              if (now > deadline) {
                await github.rest.issues.removeAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  assignees: issue.assignees.map(a => a.login)
                });
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  name: 'Status: Assigned'
                }).catch(() => {});
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: ['up-for-grabs']
                });
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: `Deadline exceeded. Unassigned for community pickup.`
                });
              }
            }
