name: Auto-assign

on:
  issues:
    types: [opened, edited, reopened, labeled]
  issue_comment:
    types: [created]

permissions:
  issues: write

jobs:
  auto-assign:
    if: github.event.issue.pull_request == null
    runs-on: ubuntu-latest
    steps:
      - name: Assign if user selected Yes in template
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || "";
            const issue = context.payload.issue;
            if (body.includes("### Would you like to work on this issue?") && body.includes("Yes")) {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                assignees: [issue.user.login],
              });
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                name: 'up-for-grabs'
              }).catch(() => {});
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ['Status: Assigned']
              });
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `<!-- assigned-timestamp -->\n[Assigned on] ${new Date().toISOString().split("T")[0]}`
              });
            }

      - name: Assign if /assign is used
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const comment = context.payload.comment.body.trim();
            const commenter = context.payload.comment.user.login;
            if (comment === '/assign' && issue.assignees.length < 2 && !issue.assignees.includes(commenter)) {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                assignees: [commenter]
              });
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                name: 'up-for-grabs'
              }).catch(() => {});
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ['Status: Assigned']
              });
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `<!-- assigned-timestamp -->\n[Assigned on] ${new Date().toISOString().split("T")[0]}`
              });
            }
